@*@model IEnumerable<TiendaTFS.Models.Cliente>*@
@model PaginatedList<TiendaTFS.Models.Cliente>

@{
    ViewData["Title"] = "Index";
}

<h1>Clientes</h1>

<p>
    <a asp-action="Create">Nuevo</a>
</p>
<form asp-action="Index">
    <div class="container">
        <div class="row align-items-start">
            <div class="col-md">
                <label class="control-label">Nombre cliente:</label>
                <input type="text" name="strCadenaBusqueda"
                       value="@ViewData["BusquedaActual"]" class="form-control" />
            </div>
            <div class="col-md align-self-end">
                <input type="submit" value="Buscar" class="btn btn-default" /> |
                <a asp-action="Index" class="btn btn-default">Lista completa</a>
            </div>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Nombre
                @*@Html.DisplayNameFor(model => model.Nombre)*@
            </th>
            <th>
                Correo electrónico
                @*@Html.DisplayNameFor(model => model.Email)*@
            </th>
            <th>
                Teléfono
                @*@Html.DisplayNameFor(model => model.Telefono)*@
            </th>
            <th>
                Direccion
                @*@Html.DisplayNameFor(model => model.Direccion)*@
            </th>
            <th>
                Poblacion
                @*@Html.DisplayNameFor(model => model.Poblacion)*@
            </th>
            <th>
                Codigo postal
                @*@Html.DisplayNameFor(model => model.CodigoPostal)*@
            </th>
            <th>
                NIF
                @*@Html.DisplayNameFor(model => model.Nif)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefono)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Direccion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Poblacion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CodigoPostal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nif)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a>
            </td>
        </tr>
}
    </tbody>
</table>
@* Poner botones de página Siguiente y Anterior *@
@{
 var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
 var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
 class="btn btn-outline-secondary @prevDisabled">
 Anterior
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
 class="btn btn-outline-secondary @nextDisabled">
    Siguiente
</a>
